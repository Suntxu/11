[{"title":"介绍","content":"---\ntitle: 介绍\ntype: docs\norder: 1\n---\n\nFastAdmin是一款基于ThinkPHP5+Bootstrap的极速后台开发框架。\n\n## **主要特性**\n\n* 基于`Auth`验证的权限管理系统\n    * 支持无限级父子级权限继承，父级的管理员可任意增删改子级管理员及权限设置\n    * 支持单管理员多角色\n    * 支持目录和控制器结构一键生成权限节点\n* 完善的前端功能组件开发\n    * 基于`AdminLTE`二次开发\n    * 基于`Bootstrap`开发，自适应手机、平板、PC\n    * 基于`RequireJS`进行JS模块管理，按需加载\n    * 基于`Less`进行样式开发\n    * 基于`Bower`进行前端组件包管理\n* 数据库表一键生成`CRUD`,包括控制器、模型、视图、JS、语言包\n* 多语言支持，服务端及客户端支持\n* 无缝整合又拍云上传功能\n* 第三方登录(QQ、微信、微博)整合\n* Ucenter整合\n\n## **在线演示**\n\nhttp:\/\/demo.fastadmin.net\n\n用户名：admin\n密　码：123456\n提　示：演示站数据无法进行删除和修改，只能新增，完整体验请下载源码安装体验\n\n## **界面截图**\n![控制台](https:\/\/wx2.sinaimg.cn\/large\/718e40a3gy1ff9k65lrumj21400pdjvk.jpg)\n\n## **问题反馈**\n\n在使用中有任何问题，欢迎反馈给我，可以用以下联系方式跟我交流\n\n交流社区: http:\/\/forum.fastadmin.net\n\nQQ群：[636393962](https:\/\/jq.qq.com\/?_wv=1027&k=487PNBb)\n\nEmail: (karsonzhang#163.com, 把#换成@)\n\nweibo: @karsonzhang\n\nGithub: https:\/\/github.com\/karsonzhang\/fastadmin\n\nGit@OSC: https:\/\/git.oschina.net\/karson\/fastadmin\n\n## **特别鸣谢**\n\n感谢以下的项目,排名不分先后\n\nThinkPHP：http:\/\/www.thinkphp.cn\n\nAdminLTE：https:\/\/almsaeedstudio.com\n\nBootstrap：http:\/\/getbootstrap.com\n\njQuery：http:\/\/jquery.com\n\n\n## **版权信息**\n\nFastAdmin遵循Apache2开源协议发布，并提供免费使用。\n\n本项目包含的第三方源码和二进制文件之版权信息另行标注。\n\n版权所有Copyright © 2017-2018 by FastAdmin (http:\/\/www.fastadmin.net)\n\nAll rights reserved。","url":"index.html","root":0,"relative":"fastadmin-doc-master\/index.md"},{"title":"介绍","content":"---\ntitle: 介绍\ntype: docs\norder: 1\n---\n\nFastAdmin是一款基于ThinkPHP5+Bootstrap的极速后台开发框架。\n\n## **主要特性**\n\n* 基于`Auth`验证的权限管理系统\n    * 支持无限级父子级权限继承，父级的管理员可任意增删改子级管理员及权限设置\n    * 支持单管理员多角色\n    * 支持目录和控制器结构一键生成权限节点\n* 完善的前端功能组件开发\n    * 基于`AdminLTE`二次开发\n    * 基于`Bootstrap`开发，自适应手机、平板、PC\n    * 基于`RequireJS`进行JS模块管理，按需加载\n    * 基于`Less`进行样式开发\n    * 基于`Bower`进行前端组件包管理\n* 数据库表一键生成`CRUD`,包括控制器、模型、视图、JS、语言包\n* 多语言支持，服务端及客户端支持\n* 无缝整合又拍云上传功能\n* 第三方登录(QQ、微信、微博)整合\n* Ucenter整合\n\n## **在线演示**\n\nhttp:\/\/demo.fastadmin.net\n\n用户名：admin\n密　码：123456\n提　示：演示站数据无法进行删除和修改，只能新增，完整体验请下载源码安装体验\n\n## **界面截图**\n![控制台](https:\/\/wx2.sinaimg.cn\/large\/718e40a3gy1ff9k65lrumj21400pdjvk.jpg)\n\n## **问题反馈**\n\n在使用中有任何问题，欢迎反馈给我，可以用以下联系方式跟我交流\n\n交流社区: http:\/\/forum.fastadmin.net\n\nQQ群：[636393962](https:\/\/jq.qq.com\/?_wv=1027&k=487PNBb)\n\nEmail: (karsonzhang#163.com, 把#换成@)\n\nweibo: @karsonzhang\n\nGithub: https:\/\/github.com\/karsonzhang\/fastadmin\n\nGit@OSC: https:\/\/git.oschina.net\/karson\/fastadmin\n\n## **特别鸣谢**\n\n感谢以下的项目,排名不分先后\n\nThinkPHP：http:\/\/www.thinkphp.cn\n\nAdminLTE：https:\/\/almsaeedstudio.com\n\nBootstrap：http:\/\/getbootstrap.com\n\njQuery：http:\/\/jquery.com\n\n\n## **版权信息**\n\nFastAdmin遵循Apache2开源协议发布，并提供免费使用。\n\n本项目包含的第三方源码和二进制文件之版权信息另行标注。\n\n版权所有Copyright © 2017-2018 by FastAdmin (http:\/\/www.fastadmin.net)\n\nAll rights reserved。","url":"index.html","root":0,"relative":"index.md"},{"title":"安装","content":"---\ntitle: 安装\ntype: docs\norder: 2\n---\n\n## **环境要求**\n\n~~~\nPHP >= 5.5.0\nMysql >= 5.5.0\nApache 或 Nginx\nPDO PHP Extension\nMBstring PHP Extension\nCURL PHP Extension\nNode.js (可选,用于安装Bower和LESS,同时打包压缩也需要使用到)\nComposer (可选,用于管理第三方扩展包)\nBower (可选,用于管理前端资源)\nLess (可选,用于编辑less文件,如果你需要增改css样式，最好安装上)\n~~~\n\n## **源代码安装**\n\n1. 下载FastAdmin完整包解压到你本地\n\thttp:\/\/git.oschina.net\/karson\/fastadmin\/attach_files\n   还可以加QQ群([636393962](https:\/\/jq.qq.com\/?_wv=1027&k=487PNBb)) 在群共享下载\n2. 将你的虚拟主机绑定到`\/yoursitepath\/public`目录\n3. 访问 http:\/\/www.yourwebsite.com\/install.php 按指示进行安装\n\n## **命令行安装** \n\n1. 克隆FastAdmin到你本地\n\t`git clone https:\/\/git.oschina.net\/karson\/fastadmin.git `\n2. 进入目录\n\t`cd fastadmin `\n3. 下载前端插件依赖包\n\t`bower install `\n4. 下载PHP依赖包\n\t`composer install`\n5. 一键创建数据库并导入数据\n\t`php think install`\n\n## **常见问题**\n1. 如果使用命令行安装则默认密码是`123456`\n2. 提示`请先下载完整包覆盖后再安装`，说明你是直接从仓库下载的代码，请从附件或群共享中下载完整包覆盖后再进行安装\n3. 执行`php think install`时出现`Access denied for user ...`，请确保数据库服务器、用户名、密码配置正确\n4. 执行`php think install`时报不是内部或外部命令? 请将php.exe所在的目录路径加入到环境变量PATH中\n5. 使用命令行安装时可能会由于你所处的网络环境导致资源下载不完整，请下载完整包覆盖后再尝试安装。\n\n* * * * *\n遇到问题到[论坛](http:\/\/forum.fastadmin.net) 或QQ群：[636393962](https:\/\/jq.qq.com\/?_wv=1027&k=487PNBb) 反馈\n\n\n\n\n","url":"install.html","root":0,"relative":"install.md"},{"title":"安装","content":"---\ntitle: 安装\ntype: docs\norder: 2\n---\n\n## **环境要求**\n\n~~~\nPHP >= 5.5.0\nMysql >= 5.5.0\nApache 或 Nginx\nPDO PHP Extension\nMBstring PHP Extension\nCURL PHP Extension\nNode.js (可选,用于安装Bower和LESS,同时打包压缩也需要使用到)\nComposer (可选,用于管理第三方扩展包)\nBower (可选,用于管理前端资源)\nLess (可选,用于编辑less文件,如果你需要增改css样式，最好安装上)\n~~~\n\n## **源代码安装**\n\n1. 下载FastAdmin完整包解压到你本地\n\thttp:\/\/git.oschina.net\/karson\/fastadmin\/attach_files\n   还可以加QQ群([636393962](https:\/\/jq.qq.com\/?_wv=1027&k=487PNBb)) 在群共享下载\n2. 将你的虚拟主机绑定到`\/yoursitepath\/public`目录\n3. 访问 http:\/\/www.yourwebsite.com\/install.php 按指示进行安装\n\n## **命令行安装** \n\n1. 克隆FastAdmin到你本地\n\t`git clone https:\/\/git.oschina.net\/karson\/fastadmin.git `\n2. 进入目录\n\t`cd fastadmin `\n3. 下载前端插件依赖包\n\t`bower install `\n4. 下载PHP依赖包\n\t`composer install`\n5. 一键创建数据库并导入数据\n\t`php think install`\n\n## **常见问题**\n1. 如果使用命令行安装则默认密码是`123456`\n2. 提示`请先下载完整包覆盖后再安装`，说明你是直接从仓库下载的代码，请从附件或群共享中下载完整包覆盖后再进行安装\n3. 执行`php think install`时出现`Access denied for user ...`，请确保数据库服务器、用户名、密码配置正确\n4. 执行`php think install`时报不是内部或外部命令? 请将php.exe所在的目录路径加入到环境变量PATH中\n5. 使用命令行安装时可能会由于你所处的网络环境导致资源下载不完整，请下载完整包覆盖后再尝试安装。\n\n* * * * *\n遇到问题到[论坛](http:\/\/forum.fastadmin.net) 或QQ群：[636393962](https:\/\/jq.qq.com\/?_wv=1027&k=487PNBb) 反馈\n\n\n\n\n","url":"install.html","root":0,"relative":"fastadmin-doc-master\/install.md"},{"title":"命令行","content":"---\ntitle: 命令行\ntype: docs\norder: 3\n---\n## 一键生成CRUD\n\nFastAdmin可通过命令控制台快速的一键生成CRUD，操作非常简单，首先确保数据库配置正确。\n\n1. 在数据库中创建一个fa_test数据表，编辑好表字段结构，并且一定写上`字段注释`和`表注释`，FastAdmin在生成CRUD时会根据字段属性、字段注释、表注释自动生成语言包和组件排版。\n2. 打开控制台进入到FastAdmin根目录，也就是think文件所在的目录\n3. 执行`php think crud -t test`即可一键生成test表的CRUD\n\n>Windows系统一键生成CRUD请使用cmd命令控制台\n\n>如果需要生成带目录层级的控制器则可以使用-c参数，例如`php think crud -t test -c mydir\/test`，如此test控制器将在文件夹`mydir`目录下\n\n>FastAdmin已经支持多表生成CRUD,请配置-r参数即可,更多参数请使用`php think crud --help`查看\n\n常见问题：\n\n1. 如果你的表带有下划级会自动生成带层级的控制器和视图，如果你不希望生成带层级的控制器和视图，请使用-c 参数，例如：`php think crud -t test_log -c testlog`将会生成testlog这个控制器，同理如果你的普通表想生成带层级的控制器则可以使用`php think crud -t test -c mydir\/test`\n2. FastAdmin自带一个fa_test表用于测试CRUD能支持的字段名称和类型，请直接使用`php think crud -t test`生成查看\n\n使用范例：\n\n![示例](http:\/\/wx1.sinaimg.cn\/large\/718e40a3gy1ff9k71b51yg20th0lje82.gif)\n\n更多CRUD一键生成可使用的参数请使用`php think crud --help`查看\n\n## 一键生成菜单\n\nFastAdmin可通过命令控制台快速的一键生成后台的权限节点，同时后台的管理菜单也会同步改变，操作非常简单。首先确保已经将FastAdmin配置好，数据库连接正确。\n\n1. 首先确保已经通过上一步的一键生成CRUD已经生成了test的CRUD\n2. 打开控制台进入到FastAdmin根目录，也就是think文件所在的目录\n3. 执行`php think menu -c test`即可生成Test控制器的权限节点\n4. 如果想一键重置全部权限节点，可调用`php think menu -c all-controller`即可根据控制器一键重新生成后台的全部权限节点\n\n>Windows系统一键生成菜单请使用cmd命令控制台\n\n>如果你的控制器还有层级关系，比如你的test控制器位于mydir之下，则在生成菜单时使用`php think menu -c mydir\/test`来生成\n\n常见问题:\n1. 在使用`php think menu`前确保你的控制器已经添加或通过`php think crud`生成好\n2. 如果之前已经生成了菜单,需要再次生成,请登录后台手动删除之前生成的菜单或使用`php think menu -c 控制器名 -d 1`来删除\n\n使用范例：\n\n![示例](http:\/\/wx2.sinaimg.cn\/large\/718e40a3gy1ff9k644sesg20tl0lehdw.gif)\n\n更多CRUD一键生成可使用的参数请使用`php think menu --help`查看\n\n\n\n## 一键压缩打包JS、CSS文件\n\nFastAdmin采用的是基于`RequireJS`的r.js进行JS和CSS文件的压缩打包，在进行下面的步骤之前，请先确保你的环境已经安装好Node环境。\n\n1. 首先确认你`application\/config.php`中app_debug的值，当为true的时候是采用的无压缩的JS和CSS，当为false时采用的是压缩版的JS和CSS。\n2. 打开控制台进入到FastAdmin根目录，也就是think文件所在的目录\n3. 执行`php think min -m all -r all`即可执行前后台的JS和CSS压缩打包， `-m all`表示前后模块均压缩 `-r all`表示CSS和JS均压缩\n4. 参数可自由搭配，例如`php think min -m backend -r css`表示仅压缩后台的CSS文件\n\n>Windows系统一键压缩打包JS、CSS文件请使用cmd命令控制台\n\nJS和CSS文件压缩前和压缩后浏览器请求对比(请右键查看大图)：\n\n![JS和CSS文件压缩前和压缩后浏览器请求对比](http:\/\/wx2.sinaimg.cn\/large\/718e40a3gy1ffjoe5t6dej21e010h7lu.jpg)\n\n更多一键生成JS和CSS的参数请使用`php think min --help`查看\n\n","url":"command.html","root":0,"relative":"command.md"},{"title":"命令行","content":"---\ntitle: 命令行\ntype: docs\norder: 3\n---\n## 一键生成CRUD\n\nFastAdmin可通过命令控制台快速的一键生成CRUD，操作非常简单，首先确保数据库配置正确。\n\n1. 在数据库中创建一个fa_test数据表，编辑好表字段结构，并且一定写上`字段注释`和`表注释`，FastAdmin在生成CRUD时会根据字段属性、字段注释、表注释自动生成语言包和组件排版。\n2. 打开控制台进入到FastAdmin根目录，也就是think文件所在的目录\n3. 执行`php think crud -t test`即可一键生成test表的CRUD\n\n>Windows系统一键生成CRUD请使用cmd命令控制台\n\n>如果需要生成带目录层级的控制器则可以使用-c参数，例如`php think crud -t test -c mydir\/test`，如此test控制器将在文件夹`mydir`目录下\n\n>FastAdmin已经支持多表生成CRUD,请配置-r参数即可,更多参数请使用`php think crud --help`查看\n\n常见问题：\n\n1. 如果你的表带有下划级会自动生成带层级的控制器和视图，如果你不希望生成带层级的控制器和视图，请使用-c 参数，例如：`php think crud -t test_log -c testlog`将会生成testlog这个控制器，同理如果你的普通表想生成带层级的控制器则可以使用`php think crud -t test -c mydir\/test`\n2. FastAdmin自带一个fa_test表用于测试CRUD能支持的字段名称和类型，请直接使用`php think crud -t test`生成查看\n\n使用范例：\n\n![示例](http:\/\/wx1.sinaimg.cn\/large\/718e40a3gy1ff9k71b51yg20th0lje82.gif)\n\n更多CRUD一键生成可使用的参数请使用`php think crud --help`查看\n\n## 一键生成菜单\n\nFastAdmin可通过命令控制台快速的一键生成后台的权限节点，同时后台的管理菜单也会同步改变，操作非常简单。首先确保已经将FastAdmin配置好，数据库连接正确。\n\n1. 首先确保已经通过上一步的一键生成CRUD已经生成了test的CRUD\n2. 打开控制台进入到FastAdmin根目录，也就是think文件所在的目录\n3. 执行`php think menu -c test`即可生成Test控制器的权限节点\n4. 如果想一键重置全部权限节点，可调用`php think menu -c all-controller`即可根据控制器一键重新生成后台的全部权限节点\n\n>Windows系统一键生成菜单请使用cmd命令控制台\n\n>如果你的控制器还有层级关系，比如你的test控制器位于mydir之下，则在生成菜单时使用`php think menu -c mydir\/test`来生成\n\n常见问题:\n1. 在使用`php think menu`前确保你的控制器已经添加或通过`php think crud`生成好\n2. 如果之前已经生成了菜单,需要再次生成,请登录后台手动删除之前生成的菜单或使用`php think menu -c 控制器名 -d 1`来删除\n\n使用范例：\n\n![示例](http:\/\/wx2.sinaimg.cn\/large\/718e40a3gy1ff9k644sesg20tl0lehdw.gif)\n\n更多CRUD一键生成可使用的参数请使用`php think menu --help`查看\n\n\n\n## 一键压缩打包JS、CSS文件\n\nFastAdmin采用的是基于`RequireJS`的r.js进行JS和CSS文件的压缩打包，在进行下面的步骤之前，请先确保你的环境已经安装好Node环境。\n\n1. 首先确认你`application\/config.php`中app_debug的值，当为true的时候是采用的无压缩的JS和CSS，当为false时采用的是压缩版的JS和CSS。\n2. 打开控制台进入到FastAdmin根目录，也就是think文件所在的目录\n3. 执行`php think min -m all -r all`即可执行前后台的JS和CSS压缩打包， `-m all`表示前后模块均压缩 `-r all`表示CSS和JS均压缩\n4. 参数可自由搭配，例如`php think min -m backend -r css`表示仅压缩后台的CSS文件\n\n>Windows系统一键压缩打包JS、CSS文件请使用cmd命令控制台\n\nJS和CSS文件压缩前和压缩后浏览器请求对比(请右键查看大图)：\n\n![JS和CSS文件压缩前和压缩后浏览器请求对比](http:\/\/wx2.sinaimg.cn\/large\/718e40a3gy1ffjoe5t6dej21e010h7lu.jpg)\n\n更多一键生成JS和CSS的参数请使用`php think min --help`查看\n\n","url":"command.html","root":0,"relative":"fastadmin-doc-master\/command.md"},{"title":"目录结构","content":"---\ntitle: 目录结构\ntype: docs\norder: 4\n---\n\nFastAdmin目录结构如下：\n\n~~~ javascript\nFastAdmin项目目录\n├── application\n│   ├── admin\n│   │   ├── command\t\t\t\/\/控制台命令\n│   │   ├── controller\n│   │   ├── lang\n│   │   │   ├── zh-cn\t\t\t\/\/控制器对应语言包,按需加载\n│   │   │   │   ├── general\t\t\n│   │   │   │   ├── index.php\n│   │   │   │   └── page.php\n│   │   │   └── zh-cn.php\t\t\/\/后台语言包,默认加载\n│   │   ├── library\n│   │   │   ├── Auth.php\t\t\/\/后台权限验证类\n│   │   │   └── traits\n│   │   │       └── Backend.php         \/\/后台控制器的Traits\n│   │   ├── model\n│   │   ├── view\n│   │   ├── common.php\n│   │   └── config.php\n│   ├── api\n│   │   ├── controller\n│   │   ├── model\n│   │   ├── view\n│   │   ├── common.php\n│   │   └── config.php\n│   ├── common\n│   │   ├── controller\n│   │   │   ├── Api.php\t\t\t\/\/Api基类\n│   │   │   ├── Backend.php\t\t\/\/后台基类\n│   │   │   ├── Frontend.php            \/\/前台基类\n│   │   │   └── Uc.php\t\t\t\/\/Ucenter基类\n│   │   ├── library\n│   │   │   ├── Auth.php\t\t\/\/前台权限验证类\n│   │   │   └── Token.php\t\t\/\/前台Token类\n│   │   ├── model\n│   │   └── view\n│   ├── extra\n│   │   ├── payment.php\t\t\t\/\/支付配置\n│   │   ├── service.php\t\t\t\/\/第三方服务配置\n│   │   ├── site.php\t\t\t\/\/站点配置\n│   │   ├── third.php\t\t\t\/\/第三方登录配置\n│   │   ├── upload.php\t\t\t\/\/上传配置\n│   │   └── wechat.php\t\t\t\/\/微信配置\n│   ├── index\n│   │   ├── controller\n│   │   ├── lang\n│   │   ├── model\n│   │   └── view\n│   ├── build.php\n│   ├── command.php\n│   ├── common.php\n│   ├── config.php\n│   ├── constants.php\n│   ├── database.php\n│   ├── route.php\n│   ├── tags.php\n│   └── uc.php\t\t\t\t\/\/UC常量\n├── extend\n│   └── fast\n│       ├── payment\t\t\t\/\/微信支付宝类\n│       ├── service\t\t\t\/\/第三方服务扩展\n│       ├── third\t\t\t\/\/第三方登录类\n│       ├── ucenter\t\t\t\/\/Ucenter文件夹\n│       ├── Auth.php\t\t\t\/\/Auth权限验证类\n│       ├── Date.php\t\t\t\/\/日期类\n│       ├── Form.php\t\t\t\/\/表单元素生成类\n│       ├── Http.php\t\t\t\/\/Http请求类\n│       ├── Menu.php\t\t\t\/\/后台菜单生成类\n│       ├── Pinyin.php\t\t\t\/\/中文转拼音转换类\n│       ├── Random.php\t\t\t\/\/随机数生成类\n│       ├── Rsa.php\t\t\t\/\/Rsa验证类\n│       └── Tree.php\t\t\t\/\/Tree类\n├── public\n│   ├── assets\n│   │   ├── build\t\t\t\/\/打包JS、CSS的资源目录\n│   │   ├── css\t\t\t\t\/\/CSS样式目录\n│   │   ├── fonts\t\t\t\/\/字体目录\n│   │   ├── img\n│   │   ├── js\n│   │   │   ├── backend\n│   │   │   └── frontend\n│   │   ├── libs\t\t\t\/\/Bower资源包位置\n│   │   └── less\t\t\t\/\/Less资源目录\n│   └── uploads\t\t\t\t\/\/上传文件目录\n│   ├── index.php                       \/\/应用入口主文件\n│   ├── install.php                     \/\/FastAdmin安装引导\n│   ├── admin.php                       \/\/后台入口文件,强烈建议修改\n│   ├── robots.txt\n│   └── router.php\n├── runtime\t\t\t\t\t\t\n├── thinkphp\t\t\t\t\/\/ThinkPHP5框架核心目录\n├── vendor\t\t\t\t\/\/Compposer资源包位置\n├── .bowerrc\t\t\t\t\/\/Bower目录配置文件\n├── LICENSE\n├── README.md\n├── bower.json\t\t\t\t\/\/Bower前端包配置\n├── build.php\t\t\t\t\t\n├── composer.json\t\t\t\/\/Composer包配置\n└── think\n~~~","url":"construct.html","root":0,"relative":"construct.md"},{"title":"目录结构","content":"---\ntitle: 目录结构\ntype: docs\norder: 4\n---\n\nFastAdmin目录结构如下：\n\n~~~ javascript\nFastAdmin项目目录\n├── application\n│   ├── admin\n│   │   ├── command\t\t\t\/\/控制台命令\n│   │   ├── controller\n│   │   ├── lang\n│   │   │   ├── zh-cn\t\t\t\/\/控制器对应语言包,按需加载\n│   │   │   │   ├── general\t\t\n│   │   │   │   ├── index.php\n│   │   │   │   └── page.php\n│   │   │   └── zh-cn.php\t\t\/\/后台语言包,默认加载\n│   │   ├── library\n│   │   │   ├── Auth.php\t\t\/\/后台权限验证类\n│   │   │   └── traits\n│   │   │       └── Backend.php         \/\/后台控制器的Traits\n│   │   ├── model\n│   │   ├── view\n│   │   ├── common.php\n│   │   └── config.php\n│   ├── api\n│   │   ├── controller\n│   │   ├── model\n│   │   ├── view\n│   │   ├── common.php\n│   │   └── config.php\n│   ├── common\n│   │   ├── controller\n│   │   │   ├── Api.php\t\t\t\/\/Api基类\n│   │   │   ├── Backend.php\t\t\/\/后台基类\n│   │   │   ├── Frontend.php            \/\/前台基类\n│   │   │   └── Uc.php\t\t\t\/\/Ucenter基类\n│   │   ├── library\n│   │   │   ├── Auth.php\t\t\/\/前台权限验证类\n│   │   │   └── Token.php\t\t\/\/前台Token类\n│   │   ├── model\n│   │   └── view\n│   ├── extra\n│   │   ├── payment.php\t\t\t\/\/支付配置\n│   │   ├── service.php\t\t\t\/\/第三方服务配置\n│   │   ├── site.php\t\t\t\/\/站点配置\n│   │   ├── third.php\t\t\t\/\/第三方登录配置\n│   │   ├── upload.php\t\t\t\/\/上传配置\n│   │   └── wechat.php\t\t\t\/\/微信配置\n│   ├── index\n│   │   ├── controller\n│   │   ├── lang\n│   │   ├── model\n│   │   └── view\n│   ├── build.php\n│   ├── command.php\n│   ├── common.php\n│   ├── config.php\n│   ├── constants.php\n│   ├── database.php\n│   ├── route.php\n│   ├── tags.php\n│   └── uc.php\t\t\t\t\/\/UC常量\n├── extend\n│   └── fast\n│       ├── payment\t\t\t\/\/微信支付宝类\n│       ├── service\t\t\t\/\/第三方服务扩展\n│       ├── third\t\t\t\/\/第三方登录类\n│       ├── ucenter\t\t\t\/\/Ucenter文件夹\n│       ├── Auth.php\t\t\t\/\/Auth权限验证类\n│       ├── Date.php\t\t\t\/\/日期类\n│       ├── Form.php\t\t\t\/\/表单元素生成类\n│       ├── Http.php\t\t\t\/\/Http请求类\n│       ├── Menu.php\t\t\t\/\/后台菜单生成类\n│       ├── Pinyin.php\t\t\t\/\/中文转拼音转换类\n│       ├── Random.php\t\t\t\/\/随机数生成类\n│       ├── Rsa.php\t\t\t\/\/Rsa验证类\n│       └── Tree.php\t\t\t\/\/Tree类\n├── public\n│   ├── assets\n│   │   ├── build\t\t\t\/\/打包JS、CSS的资源目录\n│   │   ├── css\t\t\t\t\/\/CSS样式目录\n│   │   ├── fonts\t\t\t\/\/字体目录\n│   │   ├── img\n│   │   ├── js\n│   │   │   ├── backend\n│   │   │   └── frontend\n│   │   ├── libs\t\t\t\/\/Bower资源包位置\n│   │   └── less\t\t\t\/\/Less资源目录\n│   └── uploads\t\t\t\t\/\/上传文件目录\n│   ├── index.php                       \/\/应用入口主文件\n│   ├── install.php                     \/\/FastAdmin安装引导\n│   ├── admin.php                       \/\/后台入口文件,强烈建议修改\n│   ├── robots.txt\n│   └── router.php\n├── runtime\t\t\t\t\t\t\n├── thinkphp\t\t\t\t\/\/ThinkPHP5框架核心目录\n├── vendor\t\t\t\t\/\/Compposer资源包位置\n├── .bowerrc\t\t\t\t\/\/Bower目录配置文件\n├── LICENSE\n├── README.md\n├── bower.json\t\t\t\t\/\/Bower前端包配置\n├── build.php\t\t\t\t\t\n├── composer.json\t\t\t\/\/Composer包配置\n└── think\n~~~","url":"construct.html","root":0,"relative":"fastadmin-doc-master\/construct.md"},{"title":"多语言","content":"---\ntitle: 多语言\ntype: docs\norder: 5\n---\n\n在FastAdmin中可以在任何位置(控制器、视图、JS)使用`__('语言标识');`调用语言包，如果语言标识不存在，则直接输出该语言标识\n\nFastAdmin中的`__`函数和ThinkPHP中的`lang`函数在传参上有些许区别\n\n比如\n``` php\n__('My name is %s', \"FastAdmin\");\n```\n\n将会返回\n\n```\nMy name is FastAdmin\n```\n\n而如果采用ThinkPHP中的lang中的写法则是\n\n``` php\nlang('My name is %s', [\"FastAdmin\"]);\n```\n\n可以看到ThinkPHP中的第二个参数必须传入数组，而FastAdmin中的__则没有这个要求，其实在多个参数时FastAdmin会忽略掉第三个参数$lang\n比如\n\n``` php\n__('This is %s,base on %s', 'FastAdmin', 'ThinkPHP5');\n```\n\n则会返回\n\n```\nThis is FastAdmin,base on ThinkPHP5\n```\n\n而采用lang的写法则是\n\n``` php\nlang('This is %s,base on %s', ['FastAdmin', 'ThinkPHP5']);\n```\n\n因此如果要使第三个参数$lang生效，则只能将第二个参数传为数组或采用ThinkPHP中的lang函数\n\n``` php\n\/**\n * 获取语言变量值\n * @param string    $name 语言变量名\n * @param array     $vars 动态变量值\n * @param string    $lang 语言\n * @return mixed\n *\/\nfunction __($name, $vars = [], $lang = '')\n{\n\tif (!is_array($vars))\n\t{\n\t\t$vars = func_get_args();\n\t\tarray_shift($vars);\n\t\t$lang = '';\n\t}\n\treturn Lang::get($name, $vars, $lang);\n}\n```\n\n``` php\n\/**\n * 获取语言变量值\n * @param string    $name 语言变量名\n * @param array     $vars 动态变量值\n * @param string    $lang 语言\n * @return mixed\n *\/\nfunction lang($name, $vars = [], $lang = '')\n{\n\treturn Lang::get($name, $vars, $lang);\n}\n```\n","url":"language.html","root":0,"relative":"language.md"},{"title":"多语言","content":"---\ntitle: 多语言\ntype: docs\norder: 5\n---\n\n在FastAdmin中可以在任何位置(控制器、视图、JS)使用`__('语言标识');`调用语言包，如果语言标识不存在，则直接输出该语言标识\n\nFastAdmin中的`__`函数和ThinkPHP中的`lang`函数在传参上有些许区别\n\n比如\n``` php\n__('My name is %s', \"FastAdmin\");\n```\n\n将会返回\n\n```\nMy name is FastAdmin\n```\n\n而如果采用ThinkPHP中的lang中的写法则是\n\n``` php\nlang('My name is %s', [\"FastAdmin\"]);\n```\n\n可以看到ThinkPHP中的第二个参数必须传入数组，而FastAdmin中的__则没有这个要求，其实在多个参数时FastAdmin会忽略掉第三个参数$lang\n比如\n\n``` php\n__('This is %s,base on %s', 'FastAdmin', 'ThinkPHP5');\n```\n\n则会返回\n\n```\nThis is FastAdmin,base on ThinkPHP5\n```\n\n而采用lang的写法则是\n\n``` php\nlang('This is %s,base on %s', ['FastAdmin', 'ThinkPHP5']);\n```\n\n因此如果要使第三个参数$lang生效，则只能将第二个参数传为数组或采用ThinkPHP中的lang函数\n\n``` php\n\/**\n * 获取语言变量值\n * @param string    $name 语言变量名\n * @param array     $vars 动态变量值\n * @param string    $lang 语言\n * @return mixed\n *\/\nfunction __($name, $vars = [], $lang = '')\n{\n\tif (!is_array($vars))\n\t{\n\t\t$vars = func_get_args();\n\t\tarray_shift($vars);\n\t\t$lang = '';\n\t}\n\treturn Lang::get($name, $vars, $lang);\n}\n```\n\n``` php\n\/**\n * 获取语言变量值\n * @param string    $name 语言变量名\n * @param array     $vars 动态变量值\n * @param string    $lang 语言\n * @return mixed\n *\/\nfunction lang($name, $vars = [], $lang = '')\n{\n\treturn Lang::get($name, $vars, $lang);\n}\n```\n","url":"language.html","root":0,"relative":"fastadmin-doc-master\/language.md"},{"title":"数据库","content":"---\ntitle: 数据库\ntype: docs\norder: 6\n---\n\n这里提供的是数据库表字段规则在你新增表时使用，当按如下的规则进行字段命名时\n使用`php think crud -t 表名`生成CRUD时会自动生成对应的HTML元素和组件 \n\n## 根据字段类型 \n\n类型 | 备注 | 类型说明\n---|---|---\nint | 整形 | 自动生成type为number的文本框，步长为1\nenum | 枚举型 | 自动生成单选下拉列表框\nset | set型 | 自动生成多选下拉列表框\nfloat | 浮点型 | 自动生成type为number的文本框，步长根据小数点位数生成\ntext | 文本型 | 自动生成textarea文本框\ndatetime | 日期时间 | 自动生成日期时间的组件\ndate | 日期型 | 自动生成日期型的组件\ntimestamp | 时间戳 | 自动生成日期时间的组件\n\n## 特殊字段 \n\n字段 | 字段名称 | 字段类型 | 字段说明\n---|---|---|---\ncategory_id | 分类ID | int | 将生成选择分类的下拉框,分类类型根据去掉前缀的表名，单选\ncategory_ids | 多选分类ID | varchar | 将生成选择分类的下拉框,分类类型根据去掉前缀的表名，多选\nweigh | 权重 | int | 后台的排序字段，如果存在该字段将出现排序按钮，可上下拖动进行排序\ncreatetime | 创建时间 | int | 记录添加时间字段,不需要手动维护\nupdatetime | 更新时间 | int | 记录更新时间的字段,不需要手动维护\n\n\n## 以特殊字符结尾的规则 \n\n结尾字符 | 示例 | 类型要求 | 字段说明\n---|---|---|---\ntime | refreshtime | int | 识别为日期时间型数据，自动创建选择时间的组件\nimage | smallimage | varchar | 识别为图片文件，自动生成可上传图片的组件,单图\nimages | smallimages | varchar | 识别为图片文件，自动生成可上传图片的组件,多图\nfile | attachfile | varchar | 识别为普通文件，自动生成可上传文件的组件,单文件\nfiles | attachfiles | varchar | 识别为普通文件，自动生成可上传文件的组件,多文件\navatar | miniavatar | varchar | 识别为头像，自动生成可上传图片的组件,单图\navatars | miniavatars | varchar | 识别为头像，自动生成可上传图片的组件,多图\ncontent | maincontent | text | 识别为内容，自动生成带编辑器的组件\n_id | user_id | int\/varchar | 识别为关联字段，自动生成可自动完成的文本框，单选\n_ids | user_ids | varchar | 识别为关联字段，自动生成可自动完成的文本框，多选\nlist | timelist | enum | 识别为列表字段，自动生成单选下拉列表\nlist | timelist | set | 识别为列表字段，自动生成多选下拉列表\ndata | hobbydata | enum | 识别为选项字段，自动生成单选框\ndata | hobbydata | set | 识别为选项字段，自动生成复选框\n   \n温馨提示：以list或data结尾的字段必须搭配enum或set类型才起作用 \n\n\n## 注释说明\n\n字段 | 注释内容 | 字段类型 | 字段说明\n---|---|---|---\nstatus | 状态 | int | 将生成普通语言包和普通文本框\nstatus | 状态 | int | 将生成普通语言包和普通文本框\nstatus | 状态 | enum(‘0’,’1’,’2’) | 将生成普通语言包和单选下拉列表\nstatus | 状态:0=隐藏,1=正常,2=推荐 | enum(‘0’,’1’,’2’) | 将生成多个语言包和单选下拉列表，且列表中的值显示为对应的文字","url":"database.html","root":0,"relative":"fastadmin-doc-master\/database.md"},{"title":"数据库","content":"---\ntitle: 数据库\ntype: docs\norder: 6\n---\n\n这里提供的是数据库表字段规则在你新增表时使用，当按如下的规则进行字段命名时\n使用`php think crud -t 表名`生成CRUD时会自动生成对应的HTML元素和组件 \n\n## 根据字段类型 \n\n类型 | 备注 | 类型说明\n---|---|---\nint | 整形 | 自动生成type为number的文本框，步长为1\nenum | 枚举型 | 自动生成单选下拉列表框\nset | set型 | 自动生成多选下拉列表框\nfloat | 浮点型 | 自动生成type为number的文本框，步长根据小数点位数生成\ntext | 文本型 | 自动生成textarea文本框\ndatetime | 日期时间 | 自动生成日期时间的组件\ndate | 日期型 | 自动生成日期型的组件\ntimestamp | 时间戳 | 自动生成日期时间的组件\n\n## 特殊字段 \n\n字段 | 字段名称 | 字段类型 | 字段说明\n---|---|---|---\ncategory_id | 分类ID | int | 将生成选择分类的下拉框,分类类型根据去掉前缀的表名，单选\ncategory_ids | 多选分类ID | varchar | 将生成选择分类的下拉框,分类类型根据去掉前缀的表名，多选\nweigh | 权重 | int | 后台的排序字段，如果存在该字段将出现排序按钮，可上下拖动进行排序\ncreatetime | 创建时间 | int | 记录添加时间字段,不需要手动维护\nupdatetime | 更新时间 | int | 记录更新时间的字段,不需要手动维护\n\n\n## 以特殊字符结尾的规则 \n\n结尾字符 | 示例 | 类型要求 | 字段说明\n---|---|---|---\ntime | refreshtime | int | 识别为日期时间型数据，自动创建选择时间的组件\nimage | smallimage | varchar | 识别为图片文件，自动生成可上传图片的组件,单图\nimages | smallimages | varchar | 识别为图片文件，自动生成可上传图片的组件,多图\nfile | attachfile | varchar | 识别为普通文件，自动生成可上传文件的组件,单文件\nfiles | attachfiles | varchar | 识别为普通文件，自动生成可上传文件的组件,多文件\navatar | miniavatar | varchar | 识别为头像，自动生成可上传图片的组件,单图\navatars | miniavatars | varchar | 识别为头像，自动生成可上传图片的组件,多图\ncontent | maincontent | text | 识别为内容，自动生成带编辑器的组件\n_id | user_id | int\/varchar | 识别为关联字段，自动生成可自动完成的文本框，单选\n_ids | user_ids | varchar | 识别为关联字段，自动生成可自动完成的文本框，多选\nlist | timelist | enum | 识别为列表字段，自动生成单选下拉列表\nlist | timelist | set | 识别为列表字段，自动生成多选下拉列表\ndata | hobbydata | enum | 识别为选项字段，自动生成单选框\ndata | hobbydata | set | 识别为选项字段，自动生成复选框\n   \n温馨提示：以list或data结尾的字段必须搭配enum或set类型才起作用 \n\n\n## 注释说明\n\n字段 | 注释内容 | 字段类型 | 字段说明\n---|---|---|---\nstatus | 状态 | int | 将生成普通语言包和普通文本框\nstatus | 状态 | int | 将生成普通语言包和普通文本框\nstatus | 状态 | enum(‘0’,’1’,’2’) | 将生成普通语言包和单选下拉列表\nstatus | 状态:0=隐藏,1=正常,2=推荐 | enum(‘0’,’1’,’2’) | 将生成多个语言包和单选下拉列表，且列表中的值显示为对应的文字","url":"database.html","root":0,"relative":"database.md"},{"title":"模块","content":"---\ntitle: 模块\ntype: docs\norder: 7\n---\n\n## 系统配置\n\n在开发中经常会遇到一些配置信息可以在后台进行修改的功能，此时我们在系统配置中进行增改操作。\n\n系统配置支持多种数据类型，下面依次做简单介绍\n\n类型 | 介绍\n--- | ---\n字符 |     生成单行文本框\n文本 |     生成多行文本框\n数字 |     生成单行数字文本框\n日期时间 |     生成文本框且自动生成日期时间选择器\n列表 |     生成下拉列表框\n列表(多) |     生成多选下拉列表框\n图片 |     生成单图文本框且上传或选择单图，带图片预览\n图片(多) |     生成多图文本框且可上传或选择多张图，带图片预览\n文件 |     生成文本框且可上传或选择文件\n文件(多) |     生成文本框且可上传或选择多个文件\n复选 |     生成复选框\n单选 |     生成单选框\n数组 |     生成一维数组输入列表且可动态添加和排序\n\n## 定时任务\n\n在FastAdmin自带一套定时任务的功能，在配置上Crontab之前是不起作用的。\n\n**操作步骤**\n1. 在Crontab中新增一条定时任务的记录\n\n```\n* * * * * \/usr\/bin\/php \/your-fastadmin-dir\/public\/index.php \/index\/autotask\/crontab >> \/var\/log\/fastadmin.`date +\\%Y-\\%m-\\%d`.log 2>&1\n```\n\n2. 在后台`常规管理`->`定时任务`新增一条记录即可 \n3. 执行成功后会在`runtime\/log\/crontab`目录中生成当天的日志文件\n\n>`\/index\/autotask\/crontab`这个地址只在CLI控制台起作用，浏览器访问是不启作用的。\n\n## 数据库管理\n\nFastAdmin集成了一个简洁的数据库在线管理功能，可在线进行一些简单的数据库表优化或修复,查看表结构和数据的操作。也可以进行单条或多条SQL语句的查询。\n\n为了避免表数据量过大导致浏览器卡顿的情况出现，FastAdmin在查看表数据和执行SELECT查询的时候做了Limit 100的限制，如果需要查询超过100条的数据，请手动在你的SQL语句后加上LIMIT限制。\n\n如果是Update或Delete查询，则会返回影响的行数\n\n>数据库管理权限过大，可任意操作数据库，建议只开放给超级管理员或数据库管理人员使用。\n\n## 附件管理\n\n附件管理可以管理后台上传的文件资源，也可以在此上传资源到服务器\n\n在使用上传功能之前，建议先配置`\/application\/extra\/upload.php`中的参数信息，否则上传功能和附件管理功能将无法正常使用。\n\n在需要使用到上传的地方放置一个上传按钮，并且级这个按钮添加上`plupload`这个类即可\n\n如果需要上传后将上传获得的地址填充到文本框，给对应的文本框加上一个属性，例如：\n\n```\n<input type=\"text\" name=\"row[upyun]\" id=\"c-upyun\" class=\"form-control\" cols=\"60\" \/>\n<button id=\"plupload-upyun\" class=\"btn btn-danger plupload\" data-input-id=\"c-upyun\" data-after-upload=\"mycustomcallback\"><i class=\"fa fa-upload\"><\/i>上传<\/button>\n```\n\n其中`data-input-id`的值需要和文本框的ID的值对应起来，这样在上传成功以后FastAdmin会自动将文本填充值到文本框中去，\n如果需要上传后进行回调处理自己的处理方法\n\n比如上方的代码中有添加了属性`data-after-upload=\"mycustomcallback\"`\n此时你需要可以在你模块的JS文件中先注册一个回调函数，一定要注册在`Upload.api.custom`下，注册方法为：\n\n```\nrequire([\"upload\"], function (Upload) {\n\tUpload.api.custom.mycustomcallback = function (data) {\n\t\tconsole.log(data, \"这里是自定义的回调方法\");\n\t}\n});\n```\n\n其中data就是从服务器返回的包含了上传URL的数据，此时你想要怎么处理URL都行。\n\n## 微信管理\n\n在使用微信管理之前，请先配置好`\/application\/extra\/wechat.php`中的配置信息，其次在微信公众号开发者平台中配置好相应的回调地址，回调地址是：\n\n```\nhttp:\/\/www.yoursite.com\/index\/wechat\/api\n```\n其次在公众号管理后台配置回调时，FastAdmin只有部署在外网环境下才可以正常配置！\n\n","url":"module.html","root":0,"relative":"fastadmin-doc-master\/module.md"},{"title":"模块","content":"---\ntitle: 模块\ntype: docs\norder: 7\n---\n\n## 系统配置\n\n在开发中经常会遇到一些配置信息可以在后台进行修改的功能，此时我们在系统配置中进行增改操作。\n\n系统配置支持多种数据类型，下面依次做简单介绍\n\n类型 | 介绍\n--- | ---\n字符 |     生成单行文本框\n文本 |     生成多行文本框\n数字 |     生成单行数字文本框\n日期时间 |     生成文本框且自动生成日期时间选择器\n列表 |     生成下拉列表框\n列表(多) |     生成多选下拉列表框\n图片 |     生成单图文本框且上传或选择单图，带图片预览\n图片(多) |     生成多图文本框且可上传或选择多张图，带图片预览\n文件 |     生成文本框且可上传或选择文件\n文件(多) |     生成文本框且可上传或选择多个文件\n复选 |     生成复选框\n单选 |     生成单选框\n数组 |     生成一维数组输入列表且可动态添加和排序\n\n## 定时任务\n\n在FastAdmin自带一套定时任务的功能，在配置上Crontab之前是不起作用的。\n\n**操作步骤**\n1. 在Crontab中新增一条定时任务的记录\n\n```\n* * * * * \/usr\/bin\/php \/your-fastadmin-dir\/public\/index.php \/index\/autotask\/crontab >> \/var\/log\/fastadmin.`date +\\%Y-\\%m-\\%d`.log 2>&1\n```\n\n2. 在后台`常规管理`->`定时任务`新增一条记录即可 \n3. 执行成功后会在`runtime\/log\/crontab`目录中生成当天的日志文件\n\n>`\/index\/autotask\/crontab`这个地址只在CLI控制台起作用，浏览器访问是不启作用的。\n\n## 数据库管理\n\nFastAdmin集成了一个简洁的数据库在线管理功能，可在线进行一些简单的数据库表优化或修复,查看表结构和数据的操作。也可以进行单条或多条SQL语句的查询。\n\n为了避免表数据量过大导致浏览器卡顿的情况出现，FastAdmin在查看表数据和执行SELECT查询的时候做了Limit 100的限制，如果需要查询超过100条的数据，请手动在你的SQL语句后加上LIMIT限制。\n\n如果是Update或Delete查询，则会返回影响的行数\n\n>数据库管理权限过大，可任意操作数据库，建议只开放给超级管理员或数据库管理人员使用。\n\n## 附件管理\n\n附件管理可以管理后台上传的文件资源，也可以在此上传资源到服务器\n\n在使用上传功能之前，建议先配置`\/application\/extra\/upload.php`中的参数信息，否则上传功能和附件管理功能将无法正常使用。\n\n在需要使用到上传的地方放置一个上传按钮，并且级这个按钮添加上`plupload`这个类即可\n\n如果需要上传后将上传获得的地址填充到文本框，给对应的文本框加上一个属性，例如：\n\n```\n<input type=\"text\" name=\"row[upyun]\" id=\"c-upyun\" class=\"form-control\" cols=\"60\" \/>\n<button id=\"plupload-upyun\" class=\"btn btn-danger plupload\" data-input-id=\"c-upyun\" data-after-upload=\"mycustomcallback\"><i class=\"fa fa-upload\"><\/i>上传<\/button>\n```\n\n其中`data-input-id`的值需要和文本框的ID的值对应起来，这样在上传成功以后FastAdmin会自动将文本填充值到文本框中去，\n如果需要上传后进行回调处理自己的处理方法\n\n比如上方的代码中有添加了属性`data-after-upload=\"mycustomcallback\"`\n此时你需要可以在你模块的JS文件中先注册一个回调函数，一定要注册在`Upload.api.custom`下，注册方法为：\n\n```\nrequire([\"upload\"], function (Upload) {\n\tUpload.api.custom.mycustomcallback = function (data) {\n\t\tconsole.log(data, \"这里是自定义的回调方法\");\n\t}\n});\n```\n\n其中data就是从服务器返回的包含了上传URL的数据，此时你想要怎么处理URL都行。\n\n## 微信管理\n\n在使用微信管理之前，请先配置好`\/application\/extra\/wechat.php`中的配置信息，其次在微信公众号开发者平台中配置好相应的回调地址，回调地址是：\n\n```\nhttp:\/\/www.yoursite.com\/index\/wechat\/api\n```\n其次在公众号管理后台配置回调时，FastAdmin只有部署在外网环境下才可以正常配置！\n\n","url":"module.html","root":0,"relative":"module.md"},{"title":"组件","content":"---\ntitle: 组件\ntype: docs\norder: 8\n---\n\n## 又拍云上传\n\nFastAdmin支持将文件或图片直传至又拍云服务器而不需要通过本地服务器进行中转\n在使用又拍云上传功能之前请先到又拍云注册一个账号并新增一个云储存服务，又拍云地址是https:\/\/console.upyun.com\/register\/?invite=SyAt3ehQZ\n当创建好服务后获取到相应的配置信息\n修改`\/application\/extra\/upload.php` 文件，修改其中的配置\n\n``` php\n\/\/上传配置\nreturn [\n    \/**\n     * 上传地址,默认是本地上传,如果需要使用又拍云则改为http:\/\/v0.api.upyun.com\/yourbucketname\n     *\/\n    'uploadurl' => 'http:\/\/v0.api.upyun.com\/yourbucketname',\n    \/**\n     * 又拍云或本机的CDN地址\n     *\/\n    'cdnurl'    => 'http:\/\/yourbucketname.b0.upaiyun.com',\n    \/**\n     * 上传成功后的通知地址\n     *\/\n    'notifyurl' => 'http:\/\/www.yoursite.com\/upyun\/notify',\n    \/**\n     * 又拍云Bucket\n     *\/\n    'bucket'    => 'yourbucketname',\n    \/**\n     * 生成的policy有效时间\n     *\/\n    'expire'    => '86400',\n    \/**\n     * 又拍云formkey\n     *\/\n    'formkey'   => '',\n    \/**\n     * 文件保存格式\n     *\/\n    'savekey'   => '\/uploads\/media\/{year}\/{mon}{day}\/{filemd5}{.suffix}',\n    \/**\n     * 最大可上传大小\n     *\/\n    'maxsize'   => '10mb',\n    \/**\n     * 可上传的文件类型\n     *\/\n    'mimetype'  => '*',\n    \/**\n     * 是否支持批量上传\n     *\/\n    'multiple'  => true,\n    \/**\n     * 又拍云操作员用户名\n     *\/\n    'username'  => '',\n    \/**\n     * 又拍云操作员密码\n     *\/\n    'password'  => '',\n];\n```\n\n配置成功后即可在后台直接上传资源到又拍云了。\n如果在配置了又拍云的基础上又想启用本地上传该如何操作呢？\n给按钮添加一个属性`data-url=\"ajax\/upload\"`即可单独使用本地上传\n\n\n## 第三方登录\n\nFastAdmin自带一套第三方登录的扩展，包括QQ、微博、微信三种登录方式，在使用第三方登录前需要修改`\/application\/extra\/third.php`的参数信息，其中回调地址可以为空，当回调地址为空时，FastAdmin会自动计算回调地址。其次需要在QQ、微博、微信的开放平台上配置好回调信息，例如FastAdmin默认生成QQ登录的回调地址是：\n\n```\nhttp:\/\/www.yoursite.com\/index\/user\/third\/action\/callback\/platform\/qq\n```\n其它平台请按需设置\n\n## 表单生成\n\nFastAdmin封装了几个常用的方法，可以快速的生成表单元素\n\n1. 生成下拉列表框build_select\n~~~ php\n<?php echo build_select('row[flag]', 'h,i,s', null, ['id'=>'c-flag','class'=>'form-control selectpicker','required'=>''])?>\n~~~\n\n2. 生成单选按钮组build_radios\n~~~ php\n<?php echo build_radios('row[enforce]', [1=>\"是\", 0=>\"否\"], 1);?>\n~~~\n \n3. 生成复选按钮组build_checkboxs\n使用方法\n~~~ php\n<?php echo build_checkboxs('row[game]', [1=>\"足球\", 0=>\"篮球\"], 1);?>\n~~~\n  \n## 阿里大鱼短信发送\n\n使用阿里大鱼短信发送之前请预先到阿里大鱼上开通短信功能，生创建一个模板和签名\n申请好配置信息后修改`\/application\/extra\/service.php`中的alisms相应配置\n使用方法：\n\n~~~ php\n$sms = new Alisms();\n$sms->sign(\"FastAdmin\")\n    ->param([\"key1\"=>\"值1\", \"key2\"=>\"值2\"])\n    ->template(\"模板ID\")\n    ->mobile(\"接收号码\")\n    ->send();\n~~~\n","url":"component.html","root":0,"relative":"component.md"},{"title":"组件","content":"---\ntitle: 组件\ntype: docs\norder: 8\n---\n\n## 又拍云上传\n\nFastAdmin支持将文件或图片直传至又拍云服务器而不需要通过本地服务器进行中转\n在使用又拍云上传功能之前请先到又拍云注册一个账号并新增一个云储存服务，又拍云地址是https:\/\/console.upyun.com\/register\/?invite=SyAt3ehQZ\n当创建好服务后获取到相应的配置信息\n修改`\/application\/extra\/upload.php` 文件，修改其中的配置\n\n``` php\n\/\/上传配置\nreturn [\n    \/**\n     * 上传地址,默认是本地上传,如果需要使用又拍云则改为http:\/\/v0.api.upyun.com\/yourbucketname\n     *\/\n    'uploadurl' => 'http:\/\/v0.api.upyun.com\/yourbucketname',\n    \/**\n     * 又拍云或本机的CDN地址\n     *\/\n    'cdnurl'    => 'http:\/\/yourbucketname.b0.upaiyun.com',\n    \/**\n     * 上传成功后的通知地址\n     *\/\n    'notifyurl' => 'http:\/\/www.yoursite.com\/upyun\/notify',\n    \/**\n     * 又拍云Bucket\n     *\/\n    'bucket'    => 'yourbucketname',\n    \/**\n     * 生成的policy有效时间\n     *\/\n    'expire'    => '86400',\n    \/**\n     * 又拍云formkey\n     *\/\n    'formkey'   => '',\n    \/**\n     * 文件保存格式\n     *\/\n    'savekey'   => '\/uploads\/media\/{year}\/{mon}{day}\/{filemd5}{.suffix}',\n    \/**\n     * 最大可上传大小\n     *\/\n    'maxsize'   => '10mb',\n    \/**\n     * 可上传的文件类型\n     *\/\n    'mimetype'  => '*',\n    \/**\n     * 是否支持批量上传\n     *\/\n    'multiple'  => true,\n    \/**\n     * 又拍云操作员用户名\n     *\/\n    'username'  => '',\n    \/**\n     * 又拍云操作员密码\n     *\/\n    'password'  => '',\n];\n```\n\n配置成功后即可在后台直接上传资源到又拍云了。\n如果在配置了又拍云的基础上又想启用本地上传该如何操作呢？\n给按钮添加一个属性`data-url=\"ajax\/upload\"`即可单独使用本地上传\n\n\n## 第三方登录\n\nFastAdmin自带一套第三方登录的扩展，包括QQ、微博、微信三种登录方式，在使用第三方登录前需要修改`\/application\/extra\/third.php`的参数信息，其中回调地址可以为空，当回调地址为空时，FastAdmin会自动计算回调地址。其次需要在QQ、微博、微信的开放平台上配置好回调信息，例如FastAdmin默认生成QQ登录的回调地址是：\n\n```\nhttp:\/\/www.yoursite.com\/index\/user\/third\/action\/callback\/platform\/qq\n```\n其它平台请按需设置\n\n## 表单生成\n\nFastAdmin封装了几个常用的方法，可以快速的生成表单元素\n\n1. 生成下拉列表框build_select\n~~~ php\n<?php echo build_select('row[flag]', 'h,i,s', null, ['id'=>'c-flag','class'=>'form-control selectpicker','required'=>''])?>\n~~~\n\n2. 生成单选按钮组build_radios\n~~~ php\n<?php echo build_radios('row[enforce]', [1=>\"是\", 0=>\"否\"], 1);?>\n~~~\n \n3. 生成复选按钮组build_checkboxs\n使用方法\n~~~ php\n<?php echo build_checkboxs('row[game]', [1=>\"足球\", 0=>\"篮球\"], 1);?>\n~~~\n  \n## 阿里大鱼短信发送\n\n使用阿里大鱼短信发送之前请预先到阿里大鱼上开通短信功能，生创建一个模板和签名\n申请好配置信息后修改`\/application\/extra\/service.php`中的alisms相应配置\n使用方法：\n\n~~~ php\n$sms = new Alisms();\n$sms->sign(\"FastAdmin\")\n    ->param([\"key1\"=>\"值1\", \"key2\"=>\"值2\"])\n    ->template(\"模板ID\")\n    ->mobile(\"接收号码\")\n    ->send();\n~~~\n","url":"component.html","root":0,"relative":"fastadmin-doc-master\/component.md"},{"title":"常见问题","content":"---\ntitle: 常见问题\ntype: docs\norder: 9\n---\n\n如果你在使用FastAdmin的过程中发现任何问题,请到论坛发贴: http:\/\/forum.fastadmin.net\n\n## 安装后提示控制器不存在:E或控制器不存在:N\n\n出现这种情况一般是由于Web服务器的PATH_INFO未配置正确，导致服务器接收到了错误的PATH_INFO值，请检查你的PATH_INFO并修复后再重试\n\n## FastAdmin的数据库SQL文件在哪里\n\nFastAdmin在安装时会自动创建数据库和数据表,免除了你手动创建数据库和导入数据库的烦恼。\n但很多时候我们需要构造自己的安装SQL，这就需要修改安装SQL文件。\nFastAdmin的数据库安装文件保存在\n\n[\/application\/admin\/command\/Install\/fastadmin.sql](http:\/\/git.oschina.net\/karson\/fastadmin\/raw\/master\/application\/admin\/command\/Install\/fastadmin.sql)\n\n\n## 如何修改后台默认皮肤\n\n为了进一步提升加载速度，后台默认启用了绿色主题的皮肤，如何修改其它皮肤呢？\n1.找到`\/public\/assets\/css\/backend.css` 这个文件，默认是：\n``` css\n@import url(\"..\/css\/bootstrap.min.css\");\n@import url(\"..\/css\/fastadmin.min.css\");\n@import url(\"..\/css\/skins\/skin-green.css\");\n@import url(\"..\/css\/iconfont.css\");\n@import url(\"..\/libs\/font-awesome\/css\/font-awesome.min.css\");\n@import url(\"..\/libs\/toastr\/toastr.min.css\");\n@import url(\"..\/libs\/layer\/build\/skin\/default\/layer.css\");\n@import url(\"..\/css\/backend-func.css\");\n```\n\n2.其中可以看到只加载了`skin-green.css`这个皮肤，如果需要启用其它皮肤可以在文件末尾追加\n``` css\n@import url(\"..\/css\/skins\/skin-颜色标识.css\");\n```\n`颜色标识`总共有 `black\/black-light\/blue\/blue-light\/green\/green-light\/purple\/purple-light\/red\/red-light\/yellow\/yellow-light`总12个颜色标识\n如果需要一次性加载全部的皮肤样式，则把`skin-green`改为`_all-skins`即可\n\n## php think install报不是内部或外部命令\n\n这是由于php.exe文件所在目录未加入到PATH环境变量导致的\n\n找到`php.exe`文件所在的目录，将该目录加入到系统PATH环境变量中后，重启即可解决\n\n\n## php think install报command not found\n\n这是由于在Linux环境下未找到php的脚本程序\n\n有两种解决办法，首先尝试使用which php找到php所在的位置。\n1. 找到php脚本程序所在的目录，加入到PATH环境变量中去，使用export PATH=$PATH:php脚本程序所在目录\n2. 找到php脚本程序文件，使用ln -s php脚本程序文件 \/usr\/bin\/php\n\n## 安装后只能访问首页，其它页均报no input file specified\n\n这是由于伪静态没有生效或错误导致的。\n\n这种情况一般在Apache下伪静态不工作的情况下出现，\n首先确保已经启用Apache的伪静态，确保目录已经配置好权限，如下面的Directory配置\n``` apache\n<VirtualHost *:80>\n    DocumentRoot \"\/Users\/Karson\/Project\/fastadmin\/public\"\n    ServerName fa.com \n    ServerAlias fa.com *.fa.com\n    <Directory \"\/Users\/Karson\/Project\/fastadmin\">\n        AllowOverride All\n        Options Indexes FollowSymLinks\n        Require all granted\n    <\/Directory>\n<\/VirtualHost>\n```\n\n其次伪静态规则在Apache fastcgi模式下会导致No input file specified.\n请修改public目录下的.htaccess文件\n\n默认的\n\n``` apache\nRewriteRule ^(.*)$ index.php\/$1 [QSA,PT,L]\n```\n\n修改成\n``` apache\nRewriteRule ^(.*)$ index.php [L,E=PATH_INFO:$1]\n```\n\n\n## 安装后只能访问首页，其它页均报404 page not found\n\n这是由于伪静态未配置或没有生效导致的。\n\n这种情况一般在Nginx下未配置伪静态的情况下出现，建议将虚拟主机的root绑定至public目录\n\n例如：\n\n```\nserver {\n        listen       80;\n        server_name  www.fa.com *.fa.com;\n        root   \"C:\/phpstudy\/WWW\/fastadmin\/public\";\n        location \/ {\n            index  index.html index.htm index.php;\n            \t#主要是这一段一定要确保存在\n                if (!-e $request_filename) {\n                    rewrite  ^(.*)$  \/index.php\/$1  last;\n                    break;\n                }\n                #结束\n            #autoindex  on;\n        }\n        location ~ \\.php(.*)$ {\n            fastcgi_pass   127.0.0.1:9000;\n            fastcgi_index  index.php;\n            fastcgi_split_path_info  ^((?U).+\\.php)(\/?.+)$;\n            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n            fastcgi_param  PATH_INFO  $fastcgi_path_info;\n            fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;\n            include        fastcgi_params;\n        }\n}\n```\n\n请将`C:\/phpstudy\/WWW`改成你服务器对应所在的目录\n\n如果你使用的是 lnmp.org 的一键安装LNMP环境，\n请查阅 https:\/\/lnmp.org\/faq\/lnmp-vhost-add-howto.html#rewrite 的伪静态配置\n\n\n## composer install时无法下载package\n\n这是由于composer默认配置是国外的源，如遇网络故障则会导致无法下载\n\n1. 执行命令前先开启代理\n2. 使用国内的镜像源，有以下两种启用方法\n\n**#### 方法一： 修改 composer 的全局配置文件（推荐方式）**\n\n打开命令行窗口并执行如下命令：\n\n```\ncomposer config -g repo.packagist composer https:\/\/packagist.phpcomposer.com\n```\n\n**#### 方法二： 修改当前项目的 composer.json 配置文件：**\n\n打开命令行窗口，进入你的项目的根目录（也就是 composer.json 文件所在目录），执行如下命令：\n\n```\ncomposer config repo.packagist composer https:\/\/packagist.phpcomposer.com\n```\n\n感谢：https:\/\/pkg.phpcomposer.com\/\n\n\n## bower install时提示选择版本如何选择\n\n这是由于不同插件对jQuery版本的要求不一致导致的，请选择较高版本即可\n\n\n## 如何禁用后台登录的每日背景图切换\n\n在FastAdmin后台登录时可以看到每日的背景图都是不一样的，如何想要固定一张背景图或禁用背景图该如何操作呢？\n\n\n找到\n```\n\/application\/admin\/views\/index\/login.html\n```\n修改\n```\nbody {\n    color:#999;\n    background:url('http:\/\/img.infinitynewtab.com\/wallpaper\/{:date(\"Ymd\")%4000}.jpg');\n    background-size:cover;\n}\n```\n\n修改其中的background地址即可\n\n\n## 如何修改或禁用左侧菜单栏的角标\n\nFastAdmin后台左侧菜单栏有彩色的小角标，这一般用于通知和提醒操作，在后台开发时是非常方便的一个小功能，如何修改和禁用它呢？\n找到`\/application\/admin\/controller\/Index.php`中的index方法，其中有一段\n\n```\n$menulist = $this->auth->getSidebar([\n\t'dashboard'  => 'hot',\n\t'auth'       => ['new', 'red', 'badge'],\n\t'auth\/admin' => 12,\n\t'auth\/rule'  => 4,\n\t'general'    => ['18', 'purple'],\n]);\n```\n\n数组的键名是对应的左侧菜单栏的相对链接\n数组的键值是需要显示的文字或数字，可以传字符串或数组\n\n1. 如果是字符串，则角标的颜色是按照'red', 'green', 'yellow', 'blue', 'teal', 'orange', 'purple'的方式进行循环的。\n2. 如果是数组，这三个值分别表示：[显示的文字, 颜色，展现方式(badge或label)]\n\n如果需要删除这个小角标，则可以直接到数组置为空即可\n\n在这里仅仅是PHP端操作小角标的方式，在JS端同样可以进行相应的操作\n在你的模块中可以调用\n\n```\ntop.window.Backend.api.sidebar({\n\t'auth\/admin':44\n});\n```\n\n具体使用方法同PHP端相同\n如何动态的在JS中移除一个小角标呢，采用以下的方法即可\n\n```\ntop.window.Backend.api.sidebar({\n\t'auth\/admin':0\n});\n```\n\n## 在Windows下如何压缩打包JS和CSS\n\n在FastAdmin中压缩打包JS和CSS文件需要NodeJS的支持\n在Windows下需要手动配置Node的可执行文件,请修改`\/application\/admin\/command\/Min.php`中`$nodeExec`的值\n如你的Node可执行文件是`C:\/Program Files\/nodejs\/node.exe`，则请配置`$nodeExec = '\"C:\/Program Files\/nodejs\/node.exe\"'`;\n\n\n## 提示未知的数据格式或网络错误\n\n很多时候都有可能遇到提示未知的数据格式或网络错误这个提示，产生这个错误的原因一般来说都是服务端报错，导致返回的数据不是JSON格式或直接未返回，如下图\n\n![](http:\/\/cdn.forum.fastadmin.net\/uploads\/201706\/02\/0f650de53f0ee93ddfd658f731027d43)\n\n准备工作：首先确保你的FA开启了调试模式`\/application\/config.php`中的`app_debug`置为`true`\n两种定位错误的方法：\n1.使用Chrome浏览器，打开开发者工具，选中Network(网络)选项卡,刷新一下页面或重新请求一次，定位到我们请求的URL，点击然后在Preview即可看到错误信息\n2.直接查看`\/runtime\/log`目录下的错误日志\n\n修复错误后再重试即可\n\nFastAdmin建议运行在PHP5.5及以上版本，因此如果提示网络错误请检查你的PHP是否低于该版本","url":"faq.html","root":0,"relative":"fastadmin-doc-master\/faq.md"},{"title":"常见问题","content":"---\ntitle: 常见问题\ntype: docs\norder: 9\n---\n\n如果你在使用FastAdmin的过程中发现任何问题,请到论坛发贴: http:\/\/forum.fastadmin.net\n\n## 安装后提示控制器不存在:E或控制器不存在:N\n\n出现这种情况一般是由于Web服务器的PATH_INFO未配置正确，导致服务器接收到了错误的PATH_INFO值，请检查你的PATH_INFO并修复后再重试\n\n## FastAdmin的数据库SQL文件在哪里\n\nFastAdmin在安装时会自动创建数据库和数据表,免除了你手动创建数据库和导入数据库的烦恼。\n但很多时候我们需要构造自己的安装SQL，这就需要修改安装SQL文件。\nFastAdmin的数据库安装文件保存在\n\n[\/application\/admin\/command\/Install\/fastadmin.sql](http:\/\/git.oschina.net\/karson\/fastadmin\/raw\/master\/application\/admin\/command\/Install\/fastadmin.sql)\n\n\n## 如何修改后台默认皮肤\n\n为了进一步提升加载速度，后台默认启用了绿色主题的皮肤，如何修改其它皮肤呢？\n1.找到`\/public\/assets\/css\/backend.css` 这个文件，默认是：\n``` css\n@import url(\"..\/css\/bootstrap.min.css\");\n@import url(\"..\/css\/fastadmin.min.css\");\n@import url(\"..\/css\/skins\/skin-green.css\");\n@import url(\"..\/css\/iconfont.css\");\n@import url(\"..\/libs\/font-awesome\/css\/font-awesome.min.css\");\n@import url(\"..\/libs\/toastr\/toastr.min.css\");\n@import url(\"..\/libs\/layer\/build\/skin\/default\/layer.css\");\n@import url(\"..\/css\/backend-func.css\");\n```\n\n2.其中可以看到只加载了`skin-green.css`这个皮肤，如果需要启用其它皮肤可以在文件末尾追加\n``` css\n@import url(\"..\/css\/skins\/skin-颜色标识.css\");\n```\n`颜色标识`总共有 `black\/black-light\/blue\/blue-light\/green\/green-light\/purple\/purple-light\/red\/red-light\/yellow\/yellow-light`总12个颜色标识\n如果需要一次性加载全部的皮肤样式，则把`skin-green`改为`_all-skins`即可\n\n## php think install报不是内部或外部命令\n\n这是由于php.exe文件所在目录未加入到PATH环境变量导致的\n\n找到`php.exe`文件所在的目录，将该目录加入到系统PATH环境变量中后，重启即可解决\n\n\n## php think install报command not found\n\n这是由于在Linux环境下未找到php的脚本程序\n\n有两种解决办法，首先尝试使用which php找到php所在的位置。\n1. 找到php脚本程序所在的目录，加入到PATH环境变量中去，使用export PATH=$PATH:php脚本程序所在目录\n2. 找到php脚本程序文件，使用ln -s php脚本程序文件 \/usr\/bin\/php\n\n## 安装后只能访问首页，其它页均报no input file specified\n\n这是由于伪静态没有生效或错误导致的。\n\n这种情况一般在Apache下伪静态不工作的情况下出现，\n首先确保已经启用Apache的伪静态，确保目录已经配置好权限，如下面的Directory配置\n``` apache\n<VirtualHost *:80>\n    DocumentRoot \"\/Users\/Karson\/Project\/fastadmin\/public\"\n    ServerName fa.com \n    ServerAlias fa.com *.fa.com\n    <Directory \"\/Users\/Karson\/Project\/fastadmin\">\n        AllowOverride All\n        Options Indexes FollowSymLinks\n        Require all granted\n    <\/Directory>\n<\/VirtualHost>\n```\n\n其次伪静态规则在Apache fastcgi模式下会导致No input file specified.\n请修改public目录下的.htaccess文件\n\n默认的\n\n``` apache\nRewriteRule ^(.*)$ index.php\/$1 [QSA,PT,L]\n```\n\n修改成\n``` apache\nRewriteRule ^(.*)$ index.php [L,E=PATH_INFO:$1]\n```\n\n\n## 安装后只能访问首页，其它页均报404 page not found\n\n这是由于伪静态未配置或没有生效导致的。\n\n这种情况一般在Nginx下未配置伪静态的情况下出现，建议将虚拟主机的root绑定至public目录\n\n例如：\n\n```\nserver {\n        listen       80;\n        server_name  www.fa.com *.fa.com;\n        root   \"C:\/phpstudy\/WWW\/fastadmin\/public\";\n        location \/ {\n            index  index.html index.htm index.php;\n            \t#主要是这一段一定要确保存在\n                if (!-e $request_filename) {\n                    rewrite  ^(.*)$  \/index.php\/$1  last;\n                    break;\n                }\n                #结束\n            #autoindex  on;\n        }\n        location ~ \\.php(.*)$ {\n            fastcgi_pass   127.0.0.1:9000;\n            fastcgi_index  index.php;\n            fastcgi_split_path_info  ^((?U).+\\.php)(\/?.+)$;\n            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n            fastcgi_param  PATH_INFO  $fastcgi_path_info;\n            fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;\n            include        fastcgi_params;\n        }\n}\n```\n\n请将`C:\/phpstudy\/WWW`改成你服务器对应所在的目录\n\n如果你使用的是 lnmp.org 的一键安装LNMP环境，\n请查阅 https:\/\/lnmp.org\/faq\/lnmp-vhost-add-howto.html#rewrite 的伪静态配置\n\n\n## composer install时无法下载package\n\n这是由于composer默认配置是国外的源，如遇网络故障则会导致无法下载\n\n1. 执行命令前先开启代理\n2. 使用国内的镜像源，有以下两种启用方法\n\n**#### 方法一： 修改 composer 的全局配置文件（推荐方式）**\n\n打开命令行窗口并执行如下命令：\n\n```\ncomposer config -g repo.packagist composer https:\/\/packagist.phpcomposer.com\n```\n\n**#### 方法二： 修改当前项目的 composer.json 配置文件：**\n\n打开命令行窗口，进入你的项目的根目录（也就是 composer.json 文件所在目录），执行如下命令：\n\n```\ncomposer config repo.packagist composer https:\/\/packagist.phpcomposer.com\n```\n\n感谢：https:\/\/pkg.phpcomposer.com\/\n\n\n## bower install时提示选择版本如何选择\n\n这是由于不同插件对jQuery版本的要求不一致导致的，请选择较高版本即可\n\n\n## 如何禁用后台登录的每日背景图切换\n\n在FastAdmin后台登录时可以看到每日的背景图都是不一样的，如何想要固定一张背景图或禁用背景图该如何操作呢？\n\n\n找到\n```\n\/application\/admin\/views\/index\/login.html\n```\n修改\n```\nbody {\n    color:#999;\n    background:url('http:\/\/img.infinitynewtab.com\/wallpaper\/{:date(\"Ymd\")%4000}.jpg');\n    background-size:cover;\n}\n```\n\n修改其中的background地址即可\n\n\n## 如何修改或禁用左侧菜单栏的角标\n\nFastAdmin后台左侧菜单栏有彩色的小角标，这一般用于通知和提醒操作，在后台开发时是非常方便的一个小功能，如何修改和禁用它呢？\n找到`\/application\/admin\/controller\/Index.php`中的index方法，其中有一段\n\n```\n$menulist = $this->auth->getSidebar([\n\t'dashboard'  => 'hot',\n\t'auth'       => ['new', 'red', 'badge'],\n\t'auth\/admin' => 12,\n\t'auth\/rule'  => 4,\n\t'general'    => ['18', 'purple'],\n]);\n```\n\n数组的键名是对应的左侧菜单栏的相对链接\n数组的键值是需要显示的文字或数字，可以传字符串或数组\n\n1. 如果是字符串，则角标的颜色是按照'red', 'green', 'yellow', 'blue', 'teal', 'orange', 'purple'的方式进行循环的。\n2. 如果是数组，这三个值分别表示：[显示的文字, 颜色，展现方式(badge或label)]\n\n如果需要删除这个小角标，则可以直接到数组置为空即可\n\n在这里仅仅是PHP端操作小角标的方式，在JS端同样可以进行相应的操作\n在你的模块中可以调用\n\n```\ntop.window.Backend.api.sidebar({\n\t'auth\/admin':44\n});\n```\n\n具体使用方法同PHP端相同\n如何动态的在JS中移除一个小角标呢，采用以下的方法即可\n\n```\ntop.window.Backend.api.sidebar({\n\t'auth\/admin':0\n});\n```\n\n## 在Windows下如何压缩打包JS和CSS\n\n在FastAdmin中压缩打包JS和CSS文件需要NodeJS的支持\n在Windows下需要手动配置Node的可执行文件,请修改`\/application\/admin\/command\/Min.php`中`$nodeExec`的值\n如你的Node可执行文件是`C:\/Program Files\/nodejs\/node.exe`，则请配置`$nodeExec = '\"C:\/Program Files\/nodejs\/node.exe\"'`;\n\n\n## 提示未知的数据格式或网络错误\n\n很多时候都有可能遇到提示未知的数据格式或网络错误这个提示，产生这个错误的原因一般来说都是服务端报错，导致返回的数据不是JSON格式或直接未返回，如下图\n\n![](http:\/\/cdn.forum.fastadmin.net\/uploads\/201706\/02\/0f650de53f0ee93ddfd658f731027d43)\n\n准备工作：首先确保你的FA开启了调试模式`\/application\/config.php`中的`app_debug`置为`true`\n两种定位错误的方法：\n1.使用Chrome浏览器，打开开发者工具，选中Network(网络)选项卡,刷新一下页面或重新请求一次，定位到我们请求的URL，点击然后在Preview即可看到错误信息\n2.直接查看`\/runtime\/log`目录下的错误日志\n\n修复错误后再重试即可\n\nFastAdmin建议运行在PHP5.5及以上版本，因此如果提示网络错误请检查你的PHP是否低于该版本","url":"faq.html","root":0,"relative":"faq.md"},{"title":"贡献代码","content":"---\ntitle: 贡献代码\ntype: docs\norder: 10\n---\n\n## 开发\n\n我们欢迎广大开发者贡献大家的智慧，让FastAdmin变得更完美.\n\n**开始之前**\n\n请严格遵循以下代码标准:\n\n- [PSR-2](https:\/\/github.com\/php-fig\/fig-standards\/blob\/master\/accepted\/PSR-2-coding-style-guide.md)\n- 使用 4 个空格作为缩进\n\n**操作流程**\n\n1. 首先Fork [karsonzhang\/fastadmin](https:\/\/github.com\/karsonzhang\/fastadmin)(Github) 或 [karson\/fastadmin](https:\/\/git.oschina.net\/karson\/fastadmin)(码云)\n2. 然后Clone 到你本地：\n    ```\n    git clone https:\/\/github.com\/<yourname>\/fastadmin.git\n    或\n    git clone https:\/\/git.oschina.net\/<yourname>\/fastadmin.git\n    ```\n3. 编写代码并提交\n4. Push 到你的分支\n5. 创建 `Pull Request` 并描述你完成的功能或者做出的修改。\n\n## 更新文档\n\n我们的文档也是开源的，源代码托管在 [karsonzhang\/fastadmin-doc](https:\/\/github.com\/karsonzhang\/fastadmin-doc)。\n\n**操作流程**\n\n1. 首页Fork [karsonzhang\/fastadmin-doc](https:\/\/github.com\/karsonzhang\/fastadmin-doc)\n2. 然后Clone到你的本地：\n    ```\n    git clone https:\/\/github.com\/<yourname>\/fastadmin-doc.git\n    ```\n3. 编写代码并提交\n4. Push 到你的仓库\n5. 创建 `Pull Request` 并描述你完成的功能或者做出的修改。\n\n## 报告BUG\n\n当你在使用过程中遇到问题，请查阅 [常见问题](faq.html) 或者在 [FastAdmin交流社区](http:\/\/forum.fastadmin.net) 提交你的问题。\n\n\n\n\n","url":"contributing.html","root":0,"relative":"fastadmin-doc-master\/contributing.md"},{"title":"贡献代码","content":"---\ntitle: 贡献代码\ntype: docs\norder: 10\n---\n\n## 开发\n\n我们欢迎广大开发者贡献大家的智慧，让FastAdmin变得更完美.\n\n**开始之前**\n\n请严格遵循以下代码标准:\n\n- [PSR-2](https:\/\/github.com\/php-fig\/fig-standards\/blob\/master\/accepted\/PSR-2-coding-style-guide.md)\n- 使用 4 个空格作为缩进\n\n**操作流程**\n\n1. 首先Fork [karsonzhang\/fastadmin](https:\/\/github.com\/karsonzhang\/fastadmin)(Github) 或 [karson\/fastadmin](https:\/\/git.oschina.net\/karson\/fastadmin)(码云)\n2. 然后Clone 到你本地：\n    ```\n    git clone https:\/\/github.com\/<yourname>\/fastadmin.git\n    或\n    git clone https:\/\/git.oschina.net\/<yourname>\/fastadmin.git\n    ```\n3. 编写代码并提交\n4. Push 到你的分支\n5. 创建 `Pull Request` 并描述你完成的功能或者做出的修改。\n\n## 更新文档\n\n我们的文档也是开源的，源代码托管在 [karsonzhang\/fastadmin-doc](https:\/\/github.com\/karsonzhang\/fastadmin-doc)。\n\n**操作流程**\n\n1. 首页Fork [karsonzhang\/fastadmin-doc](https:\/\/github.com\/karsonzhang\/fastadmin-doc)\n2. 然后Clone到你的本地：\n    ```\n    git clone https:\/\/github.com\/<yourname>\/fastadmin-doc.git\n    ```\n3. 编写代码并提交\n4. Push 到你的仓库\n5. 创建 `Pull Request` 并描述你完成的功能或者做出的修改。\n\n## 报告BUG\n\n当你在使用过程中遇到问题，请查阅 [常见问题](faq.html) 或者在 [FastAdmin交流社区](http:\/\/forum.fastadmin.net) 提交你的问题。\n\n\n\n\n","url":"contributing.html","root":0,"relative":"contributing.md"},{"title":"定时任务","content":"---\ntitle: 定时任务\ntype: module\norder: 2\n---\n\n## **定时任务**\n\n在FastAdmin自带一套定时任务的功能，在配置上Crontab之前是不起作用的。\n\n**操作步骤**\n1. 在Crontab中新增一条定时任务的记录\n使用命令`crontab -e`\n然后追加上以下行\n\n```\n* * * * * \/usr\/bin\/php \/your-fastadmin-dir\/public\/index.php \/index\/autotask\/crontab >> \/var\/log\/fastadmin.`date +\\%Y-\\%m-\\%d`.log 2>&1\n```\n\n2. 在后台`常规管理`->`定时任务`新增一条记录即可 \n3. 执行成功后会在`runtime\/log\/crontab`目录中生成当天的日志文件\n\n>`\/index\/autotask\/crontab`这个地址只在CLI控制台起作用，浏览器访问是不起作用的。","url":"crontab.html","root":0,"relative":"crontab.md"},{"title":"定时任务","content":"---\ntitle: 定时任务\ntype: module\norder: 2\n---\n\n## **定时任务**\n\n在FastAdmin自带一套定时任务的功能，在配置上Crontab之前是不起作用的。\n\n**操作步骤**\n1. 在Crontab中新增一条定时任务的记录\n使用命令`crontab -e`\n然后追加上以下行\n\n```\n* * * * * \/usr\/bin\/php \/your-fastadmin-dir\/public\/index.php \/index\/autotask\/crontab >> \/var\/log\/fastadmin.`date +\\%Y-\\%m-\\%d`.log 2>&1\n```\n\n2. 在后台`常规管理`->`定时任务`新增一条记录即可 \n3. 执行成功后会在`runtime\/log\/crontab`目录中生成当天的日志文件\n\n>`\/index\/autotask\/crontab`这个地址只在CLI控制台起作用，浏览器访问是不起作用的。","url":"crontab.html","root":0,"relative":"fastadmin-doc-master\/crontab.md"}]